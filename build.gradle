plugins {
    id 'java'
    id 'com.gradleup.shadow' version '8.3.0'
    id 'xyz.jpenilla.run-paper' version '2.3.1'
}

group = 'user.nicolaidybro'
version = '0.1'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
}

// Create a configuration for runtime dependencies
configurations {
    runtimeLibs
}

dependencies {
    compileOnly("io.papermc.paper:paper-api:1.21.8-R0.1-SNAPSHOT")
    implementation("mysql:mysql-connector-java:8.0.33")
    implementation("com.zaxxer:HikariCP:5.0.1")

    // Add dependencies to runtime libs
    runtimeLibs("mysql:mysql-connector-java:8.0.33")
    runtimeLibs("com.zaxxer:HikariCP:5.0.1")
}

tasks {
    runServer {
        // Configure the Minecraft version for our task.
        // This is the only required configuration besides applying the plugin.
        // Your plugin's jar (or shadowJar if present) will be used automatically.
        minecraftVersion("1.21")
    }
}

def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

// Shadow configuration
shadowJar {
    archiveClassifier.set('')

    // Relocate dependencies to avoid conflicts
    relocate 'com.zaxxer.hikari', 'user.nicolaidybro.databaseCore.libs.hikari'
    relocate 'com.mysql', 'user.nicolaidybro.databaseCore.libs.mysql'

    // Exclude problematic META-INF files
    exclude 'META-INF/DEPENDENCIES'
    exclude 'META-INF/LICENSE*'
    exclude 'META-INF/NOTICE*'
    exclude 'META-INF/*.SF'
    exclude 'META-INF/*.DSA'
    exclude 'META-INF/*.RSA'
}

// Configure the regular jar task
jar {
    archiveClassifier.set('thin')
}

// Make shadowJar the default build artifact
build {
    dependsOn shadowJar
}
