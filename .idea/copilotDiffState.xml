<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/build.gradle">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/build.gradle" />
              <option name="originalContent" value="plugins {&#10;    id 'java'&#10;    id 'xyz.jpenilla.run-paper' version '2.3.1'&#10;}&#10;&#10;group = 'user.nicolaidybro'&#10;version = '0.1'&#10;&#10;repositories {&#10;    mavenCentral()&#10;    maven {&#10;        name = &quot;papermc-repo&quot;&#10;        url = &quot;https://repo.papermc.io/repository/maven-public/&quot;&#10;    }&#10;}&#10;&#10;// Create a configuration for runtime dependencies&#10;configurations {&#10;    runtimeLibs&#10;}&#10;&#10;dependencies {&#10;    compileOnly(&quot;io.papermc.paper:paper-api:1.21.8-R0.1-SNAPSHOT&quot;)&#10;    implementation(&quot;mysql:mysql-connector-java:8.0.33&quot;)&#10;    implementation(&quot;com.zaxxer:HikariCP:5.0.1&quot;)&#10;&#10;    // Add dependencies to runtime libs&#10;    runtimeLibs(&quot;mysql:mysql-connector-java:8.0.33&quot;)&#10;    runtimeLibs(&quot;com.zaxxer:HikariCP:5.0.1&quot;)&#10;}&#10;&#10;tasks {&#10;    runServer {&#10;        // Configure the Minecraft version for our task.&#10;        // This is the only required configuration besides applying the plugin.&#10;        // Your plugin's jar (or shadowJar if present) will be used automatically.&#10;        minecraftVersion(&quot;1.21&quot;)&#10;    }&#10;}&#10;&#10;def targetJavaVersion = 21&#10;java {&#10;    def javaVersion = JavaVersion.toVersion(targetJavaVersion)&#10;    sourceCompatibility = javaVersion&#10;    targetCompatibility = javaVersion&#10;    if (JavaVersion.current() &lt; javaVersion) {&#10;        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)&#10;    }&#10;}&#10;&#10;tasks.withType(JavaCompile).configureEach {&#10;    options.encoding = 'UTF-8'&#10;&#10;    if (targetJavaVersion &gt;= 10 || JavaVersion.current().isJava10Compatible()) {&#10;        options.release.set(targetJavaVersion)&#10;    }&#10;}&#10;&#10;processResources {&#10;    def props = [version: version]&#10;    inputs.properties props&#10;    filteringCharset 'UTF-8'&#10;    filesMatching('plugin.yml') {&#10;        expand props&#10;    }&#10;}&#10;&#10;// Copy dependencies task&#10;task copyDependencies(type: Copy) {&#10;    from configurations.runtimeLibs&#10;    into layout.buildDirectory.dir('libs/dependencies')&#10;}&#10;&#10;// Make sure dependencies are copied when building&#10;build {&#10;    dependsOn copyDependencies&#10;}&#10;&#10;jar {&#10;    enabled = true&#10;    archiveClassifier.set('')&#10;}&#10;" />
              <option name="updatedContent" value="plugins {&#10;    id 'java'&#10;    id 'com.gradleup.shadow' version '8.3.0'&#10;    id 'xyz.jpenilla.run-paper' version '2.3.1'&#10;}&#10;&#10;group = 'user.nicolaidybro'&#10;version = '0.1'&#10;&#10;repositories {&#10;    mavenCentral()&#10;    maven {&#10;        name = &quot;papermc-repo&quot;&#10;        url = &quot;https://repo.papermc.io/repository/maven-public/&quot;&#10;    }&#10;}&#10;&#10;// Create a configuration for runtime dependencies&#10;configurations {&#10;    runtimeLibs&#10;}&#10;&#10;dependencies {&#10;    compileOnly(&quot;io.papermc.paper:paper-api:1.21.8-R0.1-SNAPSHOT&quot;)&#10;    implementation(&quot;mysql:mysql-connector-java:8.0.33&quot;)&#10;    implementation(&quot;com.zaxxer:HikariCP:5.0.1&quot;)&#10;&#10;    // Add dependencies to runtime libs&#10;    runtimeLibs(&quot;mysql:mysql-connector-java:8.0.33&quot;)&#10;    runtimeLibs(&quot;com.zaxxer:HikariCP:5.0.1&quot;)&#10;}&#10;&#10;tasks {&#10;    runServer {&#10;        // Configure the Minecraft version for our task.&#10;        // This is the only required configuration besides applying the plugin.&#10;        // Your plugin's jar (or shadowJar if present) will be used automatically.&#10;        minecraftVersion(&quot;1.21&quot;)&#10;    }&#10;}&#10;&#10;def targetJavaVersion = 21&#10;java {&#10;    def javaVersion = JavaVersion.toVersion(targetJavaVersion)&#10;    sourceCompatibility = javaVersion&#10;    targetCompatibility = javaVersion&#10;    if (JavaVersion.current() &lt; javaVersion) {&#10;        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)&#10;    }&#10;}&#10;&#10;tasks.withType(JavaCompile).configureEach {&#10;    options.encoding = 'UTF-8'&#10;&#10;    if (targetJavaVersion &gt;= 10 || JavaVersion.current().isJava10Compatible()) {&#10;        options.release.set(targetJavaVersion)&#10;    }&#10;}&#10;&#10;processResources {&#10;    def props = [version: version]&#10;    inputs.properties props&#10;    filteringCharset 'UTF-8'&#10;    filesMatching('plugin.yml') {&#10;        expand props&#10;    }&#10;}&#10;&#10;// Shadow configuration&#10;shadowJar {&#10;    archiveClassifier.set('')&#10;&#10;    // Relocate dependencies to avoid conflicts&#10;    relocate 'com.zaxxer.hikari', 'user.nicolaidybro.databaseCore.libs.hikari'&#10;    relocate 'com.mysql', 'user.nicolaidybro.databaseCore.libs.mysql'&#10;&#10;    // Exclude problematic META-INF files&#10;    exclude 'META-INF/DEPENDENCIES'&#10;    exclude 'META-INF/LICENSE*'&#10;    exclude 'META-INF/NOTICE*'&#10;    exclude 'META-INF/*.SF'&#10;    exclude 'META-INF/*.DSA'&#10;    exclude 'META-INF/*.RSA'&#10;}&#10;&#10;// Configure the regular jar task&#10;jar {&#10;    archiveClassifier.set('thin')&#10;}&#10;&#10;// Make shadowJar the default build artifact&#10;build {&#10;    dependsOn shadowJar&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>